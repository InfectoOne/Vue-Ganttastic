import{_ as t,o as e,c as o,S as d}from"./chunks/framework.1583d43a.js";const m=JSON.parse('{"title":"API: GGanttChart","description":"","frontmatter":{},"headers":[],"relativePath":"GGanttChart.md","filePath":"GGanttChart.md"}'),a={name:"GGanttChart.md"},r=d(`<h1 id="api-gganttchart" tabindex="-1">API: GGanttChart <a class="header-anchor" href="#api-gganttchart" aria-label="Permalink to &quot;API: GGanttChart&quot;">​</a></h1><p>The main component of Vue Ganttastic. Represents an entire chart and is meant to have at least one <code>g-gantt-row</code> child component.</p><h2 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h2><table><thead><tr><th>Prop</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>chart-start</code></td><td>string</td><td></td><td>Start date-time of the chart.</td></tr><tr><td><code>chart-end</code></td><td>string</td><td></td><td>End date-time of the chart.</td></tr><tr><td><code>precision</code></td><td>string?</td><td><code>&quot;hour&quot;</code></td><td>Display precision of the time-axis. Possible values: <code>hour</code>, <code>day</code>, <code>date</code>, <code>week</code> and <code>month</code>.</td></tr><tr><td><code>bar-start</code></td><td>string</td><td></td><td>Name of the property in bar objects that represents the start date.</td></tr><tr><td><code>bar-end</code></td><td>string</td><td></td><td>Name of the property in bar objects that represents the end date .</td></tr><tr><td><code>date-format</code></td><td>string | false</td><td><code>&quot;YYYY-MM-DD HH:mm&quot;</code></td><td>Datetime string format of <code>chart-start</code>, <code>chart-end</code> and the values of the <code>bar-start</code>, <code>bar-end</code> properties in bar objects. See <a href="https://day.js.org/docs/en/parse/string-format" target="_blank" rel="noreferrer">Day.js format tokens</a>. If the aforementioned properties are native JavaScript <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date" target="_blank" rel="noreferrer">Date</a> objects in your use case, pass <code>false</code>.</td></tr><tr><td><code>width</code></td><td>string?</td><td><code>&quot;100%&quot;</code></td><td>Width of the chart (e.g. <code>80%</code> or <code>800px</code>)</td></tr><tr><td><code>hide-timeaxis</code></td><td>boolean?</td><td><code>false</code></td><td>Toggle visibility of the time axis.</td></tr><tr><td><code>color-scheme</code></td><td>string | ColorScheme</td><td><code>&quot;default&quot;</code></td><td>Color scheme (theme) of the chart. Either use the name of one of the predefined schemes or pass a color-scheme-object of your own. See <a href="#color-schemes">color schemes</a>.</td></tr><tr><td><code>grid</code></td><td>string?</td><td><code>false</code></td><td>Toggle visibility of background grid.</td></tr><tr><td><code>current-time</code></td><td>boolean?</td><td><code>false</code></td><td>Toggle visibility of current time marker.</td></tr><tr><td><code>current-time-label</code></td><td>string?</td><td><code>&#39;&#39;</code></td><td>Text to be displayed next to the current time marker.</td></tr><tr><td><code>push-on-overlap</code></td><td>boolean?</td><td><code>false</code></td><td>Specifies whether bars &quot;push one another&quot; when dragging and overlaping.</td></tr><tr><td><code>no-overlap</code></td><td>boolean?</td><td><code>false</code></td><td>If <code>push-on-overlap</code> is <code>false</code>, toggle this to prevent overlaps after drag by snapping the dragged bar back to its original position.</td></tr><tr><td><code>row-height</code></td><td>number?</td><td><code>40</code></td><td>Height of each row in pixels.</td></tr><tr><td><code>highlighted-units</code></td><td>number[]?</td><td><code>[]</code></td><td>The time units specified here will be visually highlighted in the chart with a mild opaque color.</td></tr><tr><td><code>font</code></td><td>string</td><td><code>&quot;Helvetica&quot;</code></td><td>Font family of the chart.</td></tr><tr><td><code>label-column-title</code></td><td>string?</td><td><code>&#39;&#39;</code></td><td>If specified, a dedicated column for the row labels will be rendered on the left side of the graph. The specified title is displayed in the upper left corner, as the column&#39;s header.</td></tr><tr><td><code>label-column-width</code></td><td>string?</td><td><code>150px</code></td><td>Width of the column containing the row labels (if <code>label-column-title</code> specified)</td></tr></tbody></table><h2 id="custom-events" tabindex="-1">Custom Events <a class="header-anchor" href="#custom-events" aria-label="Permalink to &quot;Custom Events&quot;">​</a></h2><table><thead><tr><th>Event name</th><th>Event data</th></tr></thead><tbody><tr><td><code>click-bar</code></td><td><code>{bar: GanttBarObject, e: MouseEvent, datetime?: string}</code></td></tr><tr><td><code>mousedown-bar</code></td><td><code>{bar: GanttBarObject, e: MouseEvent, datetime?: string}</code></td></tr><tr><td><code>mouseup-bar</code></td><td><code>{bar: GanttBarObject, e: MouseEvent, datetime?: string}</code></td></tr><tr><td><code>dblclick-bar</code></td><td><code>{bar: GanttBarObject, e: MouseEvent, datetime?: string}</code></td></tr><tr><td><code>mouseenter-bar</code></td><td><code>{bar: GanttBarObject, e: MouseEvent}</code></td></tr><tr><td><code>mouseleave-bar</code></td><td><code>{bar: GanttBarObject, e: MouseEvent}</code></td></tr><tr><td><code>dragstart-bar</code></td><td><code>{bar: GanttBarObject, e: MouseEvent}</code></td></tr><tr><td><code>drag-bar</code></td><td><code>{bar: GanttBarObject, e: MouseEvent}</code></td></tr><tr><td><code>dragend-bar</code></td><td><code>{bar: GanttBarObject, e: MouseEvent, movedBars?: Map&lt;GanttBarObject, {oldStart: string, oldEnd: string}&gt;}</code></td></tr><tr><td><code>contextmenu-bar</code></td><td><code>{bar: GanttBarObject, e: MouseEvent, datetime?: string}</code></td></tr></tbody></table><h2 id="slots" tabindex="-1">Slots <a class="header-anchor" href="#slots" aria-label="Permalink to &quot;Slots&quot;">​</a></h2><table><thead><tr><th>Slot name</th><th>Slot data</th><th>Description</th></tr></thead><tbody><tr><td><code>upper-timeunit</code></td><td><code>{label: string, value: string}</code></td><td>Content of an upper time-unit section in the time axis.</td></tr><tr><td><code>timeunit</code></td><td><code>{label: string, value: string}</code></td><td>Content of a time-unit section in the time axis.</td></tr><tr><td><code>bar-tooltip</code></td><td><code>{bar: GanttBarObject}</code></td><td>Slot for the tooltip which appears when hovering over a bar.</td></tr><tr><td><code>current-time-label</code></td><td></td><td>Slot for the text shown next to the current time marker when the prop <code>current-time</code> is set to <code>true</code>.</td></tr><tr><td><code>label-column-title</code></td><td></td><td>Slot for the title of the extra column to the left where the row labels are shown if the prop <code>label-column-title</code> is set.</td></tr><tr><td><code>label-column-row</code></td><td><code>{ label: string } </code></td><td>Slot for the label of a row if <code>label-column-title</code> is set.</td></tr></tbody></table><h2 id="color-schemes" tabindex="-1">Color Schemes <a class="header-anchor" href="#color-schemes" aria-label="Permalink to &quot;Color Schemes&quot;">​</a></h2><p>List of pre-defined color schemes:</p><ul><li><code>default</code></li><li><code>creamy</code></li><li><code>crimson</code></li><li><code>dark</code></li><li><code>flare</code></li><li><code>fuchsia</code></li><li><code>grove</code></li><li><code>material-blue</code></li><li><code>sky</code></li><li><code>slumber</code></li><li><code>vue</code></li></ul><p>You can also provide your own color scheme. Your custom color scheme should be an object of the following shape:</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">primary</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">secondary</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">ternary</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">quartenary</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">hoverHighlight</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">markerCurrentTime</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">text</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">background</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">toast</span><span style="color:#89DDFF;">?:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">string</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,13),s=[r];function c(n,l,i,p,h,b){return e(),o("div",null,s)}const g=t(a,[["render",c]]);export{m as __pageData,g as default};
